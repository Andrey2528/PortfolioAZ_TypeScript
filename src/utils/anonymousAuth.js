import { auth } from './firebase';
import { signInAnonymously, onAuthStateChanged } from 'firebase/auth';

let isAuthenticating = false;
let authPromise = null;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ
export const ensureAuthenticated = async () => {
    return new Promise((resolve, reject) => {
        // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π
        if (auth.currentUser) {
            console.log(
                'üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π:',
                auth.currentUser.uid,
            );
            resolve(auth.currentUser);
            return;
        }

        // –Ø–∫—â–æ –≤–∂–µ –π–¥–µ –ø—Ä–æ—Ü–µ—Å –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
        if (isAuthenticating && authPromise) {
            return authPromise;
        }

        isAuthenticating = true;

        // –°–ª—É—Ö–∞—î–º–æ –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
        const unsubscribe = onAuthStateChanged(auth, (user) => {
            if (user) {
                console.log('‚úÖ –ê–Ω–æ–Ω—ñ–º–Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞:', user.uid);
                unsubscribe();
                isAuthenticating = false;
                resolve(user);
            }
        });

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω–æ–Ω—ñ–º–Ω—É –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é
        authPromise = signInAnonymously(auth)
            .then((result) => {
                console.log(
                    'üîë –ê–Ω–æ–Ω—ñ–º–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π:',
                    result.user.uid,
                );
                return result.user;
            })
            .catch((error) => {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:', error);
                unsubscribe();
                isAuthenticating = false;
                reject(error);
            });
    });
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω–æ–Ω—ñ–º–Ω—É –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
export const initAnonymousAuth = async () => {
    try {
        await ensureAuthenticated();
        console.log('üöÄ –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
    } catch (error) {
        console.error('üî¥ –ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é:', error);
    }
};
